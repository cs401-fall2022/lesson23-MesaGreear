extends layout

block content
  //left side navigation bar
  nav
    img(src="/images/mothLogo.png" alt="buggin.png" id="logo")
    h1 #{title}

    div(class="navBarrier")

    p(id="siteDescription") This blog serves as a safe space to discuss and share photos of the Butterfly's muted 
      | and underappreciated cousin, the Moth. Whether you find their fat fuzzy bodies adorable, their tendency 
      | to slam themselves into bright objects and your face repeatedly enduring, or their never-ending appetite 
      | for random articles of clothing relatable, this blog is the best place to express your thoughts on these 
      | strange little creatures.

    div(class="navBarrier")

    //https://stackoverflow.com/questions/1141639/how-to-semantically-provide-a-caption-title-or-label-for-a-list-in-html
    figure(id="navListLabel")
      figcaption Posts
      ul(id="navList")
        each post in posts_data
          li
            div
              a(href=("#post" + post.post_id) class="navPostListLink" title=("Go to post #" + post.post_id)) ##{post.post_id}: #{post.post_title}

    div(class="navBarrier")

    //add a new post to posts (Creates a popup where user can create a new post)
    div(id="newPostButtonContainer")
      button(id="newPostButton" title="New Post" onclick=("createNewPostPopup()")) New Post!

  //everything but what's inside the nav bar
  main

    //display an unordered list of every post in posts
    -var i = 0;
    ul(class="postList")
      each post in posts_data
        li 

          div(class="postContainer" id=("post" + post.post_id))
            //handles the top of a post, i.e. the title, metadata, and buttons
            div(class="contentTop")

              //delete post button
              div
                button(title="Delete Post" class="decoratedButton deleteButton" onclick=("deleteConfirmationPopup(true, " + post.post_id + ")"))

              //edit post button (Creates a popup where user can edit this post)
              div
                button(title="Edit Post" class="decoratedButton editButton" onclick=("createEditPostPopup(" + post.post_id + ", \"" + post.post_title + "\", \"" + post.post_txt + "\")"))

              //comment post button (Creates a popup where user can create a new comment for this post)
              div
                button(title="Comment on this Post" class="decoratedButton commentButton" onclick=("createNewCommentPopup(" + post.post_id + ")"))

              //force the title and meta data to the far left of the flexbox
              div(class="flexboxForceLeft")
                span(class="metadata" title="[post_id] - [post_datetime]") ##{post.post_id} - 
                  span(class="date") #{post.post_datetime}
                h2(class="postTitle") #{post.post_title}

            //handles the main content of a post, i.e. the image (if it has one) and text
            div(class="contentMain")
              if post.post_image != NULL 
                img(src=("uploads/" + post.post_image) alt=post.post_image class="postImage")
              p(class="postText") #{post.post_txt}

          //display an unordered list of every comment in comments that has a post_id
          //that matches the post_id of the post it will be rendered underneath
          ul(class="commentList")
            each comment in comments_data 
              if comment.post_id == post.post_id
                li 

                  div(class="commentContainer")

                    //handles the top of a comment, i.e. the metadata and buttons
                    div(class="contentTop")

                      //delete comment button
                      div
                        button(title="Delete Comment" class="decoratedButton deleteButton" onclick=("event.stopPropagation(); deleteConfirmationPopup(false, " + comment.comment_id + ")"))

                      //edit comment button (Creates a popup where user can edit this comment)
                      div
                        button(title="Edit Comment" class="decoratedButton editButton" onclick=("event.stopPropagation(); createEditCommentPopup(" + comment.comment_id + ", \"" + comment.comment_txt + "\")"))

                      //force the meta data to the far left of the flexbox
                      div(class="flexboxForceLeft")
                        span(class="metadata" title="[comment_id] - [comment_datetime]") ##{comment.comment_id} - 
                          span(class="date") #{comment.comment_datetime}
                    
                    //handles the main content of a comment, i.e. the text
                    div(class="contentMain")
                      p #{comment.comment_txt}

          //- Don't create a post barrier at the bottom of the last post
          if i != posts_data.length - 1
            div(class="postBarrier")
          -i++;

  //created popups will be put in this container and the container will be 'emptied' when popup is closed
  div(id="popupContainer")